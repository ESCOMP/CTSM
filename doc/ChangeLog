===============================================================
Tag name:  ctsm5.1.dev008
Originator(s):  erik (Erik Kluzek,UCAR/TSS,303-497-1326)
Date: Wed Oct  7 11:48:30 MDT 2020
One-line Summary: Two answer changes: Clm45/50/51 with crop, and for 2000Clm51

Purpose of changes
------------------

Turn dribble_crophrv_xsmrpool_2atm when crop is on for clm4_5, clm5_0, and clm5_1 physics
Fix the finidat files being selected for 2000_control conditions for clm5_1

Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #): 
   Fixes #1158 -- Turn dribble_crophrv_xsmrpool_2atm on when crop is on for all physics versions
   Another issue in #1166 -- correct finidat file for 2000Clm51

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[x] clm5_1

[x] clm5_0

[ ] ctsm5_0-nwp

[x] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): None

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): None

Changes made to namelist defaults (e.g., changed parameter values):
   dribble_crophrv_xsmrpool_2atm now on when crop on for all physics versions

Changes to the datasets (e.g., parameter, surface or initial files): None

Substantial timing or memory changes: None

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance):
   The namelist dribble_crophrv_xsmrpool_2atm should now be removed as a namelist item both
   in the fortran code and in build-namelist scripts. This change should be bit-for-bit.

Changes to tests or testing: None

CTSM testing: regular

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - PASS (120 tests are different than before)

  python testing (see instructions in python/README.md; document testing done):

    cheyenne -- PASS

  regular tests (aux_clm):

    cheyenne ---- PASS
    izumi ------- PASS

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: Yes

  Summarize any changes to answers, i.e.,
    - what code configurations: Clm45/50/51 with crop (except with prognostic CO2) and 2000Clm51
    - what platforms/compilers: All
    - nature of change: same climate

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): None

Pull Requests that document the changes (include PR ids): #1177
(https://github.com/ESCOMP/ctsm/pull)

  #1177 -- Two answer changes turn dribble_crophrv_xsmrpool_2atm and correct clm5_1 finidat 
           file for 2000 conditions

===============================================================
===============================================================
Tag name:  ctsm5.1.dev007
Originator(s):  sacks (Bill Sacks)
Date:  Tue Oct  6 09:29:27 MDT 2020
One-line Summary: CNFire: btran2 fixes and general cleanup

Purpose of changes
------------------

(1) Call routine to calculate fire's btran2 from CNFireArea; this has a
    few advantages:

    - It makes the logic of CNFireArea more clear (rather than depending on
      a btran2 variable that is calculated from some other part of the code)

    - This avoids having the biogeophysics depend on the biogeochemistry

    - This lets us avoid doing this btran calc if using no-fire â€“ or other,
      future, fire methods that don't need it

    Note regarding testing: In the initial step, I kept this calculation
    dependent on a saved version of h2osoi_vol to avoid changing
    answers; I changed this in the answer changes in step (2), as noted
    below.

(2) Answer-changing fixes to CNFire's btran2 calculation and use:

    (a) Calculate fire btran2 using updated h2osoi_vol (this is an
        answer-changing cleanup step from (1))

    (b) TEMPORARY CHANGE (reverted in the cleanup in (3)): Reinitialize
        fire btran2 to spval for all patches in each time step, so that
        the fire code isn't trying to use btran2 from earlier time steps
        for patches that were in the exposed veg filter at one point but
        no longer are.

        One implication of this is that, if there is currently no
        exposed veg on a column, the new code leads to the block of code
        that forces fire_m = 0 (because wtlf will be 0). Previously, in
        contrast, it looks like fire_m was allowed to be non-zero even
        if there is currently no exposed veg, because btran2 and wtlf
        were accumulated if a patch ever was exposed in the past.

    (c) Limit fire btran2 to be <= 1, rather than letting it be slightly
        greater than 1. (Due to a conditional in CNFireArea, these
        slightly-greater-tan-1 values were being ignored when computing
        btran_col, rather than averaging in a 1 value.)

(3) Non-answer-changing fire code cleanup:

    (a) Cleanup of the btran2 fixes, including reverting the TEMPORARY
        CHANGE noted in (2b), instead relying on a better mechanism:
        just doing the calculations of btran_col and wtlf over the
        exposedvegp filter. Also, get rid of the checks for
        shr_infnan_isnan(btran2(p)) and btran2(p) <= 1 (allowed by the
        other changes in (2) and (3)).

    (b) Set btran2 to 0 over non-exposed-veg points: this changes
        answers for the BTRAN2 diagnostic field, but nothing else. (This
        follows what is done for the standard BTRAN.)

    (c) Move calc_fire_root_wetness for CNFireLi2021 into the base type
        to avoid future bugs (assuming that the next fire module will
        extend the base class but will also want to use this new version
        of calc_fire_root_wetness).

    (d) Change fire looping structure to be more standard

(4) Remove some very expensive tests from aux_clm, putting some in the
    new ctsm_sci test list instead

(5) A bit of other minor cleanup

Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #):
- Resolves ESCOMP/CTSM#1139 (Decrease expense of ne0ARCTICGRISne30x8
  test and C96 tests)
- Resolves ESCOMP/CTSM#1153 (Fire btran2 is only computed for exposed
  veg patches, but is used over all veg patches)
- Resolves ESCOMP/CTSM#1170 (CNFire code: btran2 should not be skipped
  when it's greater than 1)
- Partially addresses ESCOMP/CTSM#1142 (Add ctsm_sci test list that
  would be used for releases and making sure important resolutions run
  well)

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[X] clm5_1

[X] clm5_0

[X] ctsm5_0-nwp

[X] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): none

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): none

Changes made to namelist defaults (e.g., changed parameter values): none

Changes to the datasets (e.g., parameter, surface or initial files): none

Substantial timing or memory changes: none

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance): none

Changes to tests or testing: Remove some very expensive tests from
aux_clm, putting some in the new ctsm_sci test list instead.

CTSM testing:

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - not run

  tools-tests (test/tools):

    cheyenne - not run

  PTCLM testing (tools/shared/PTCLM/test):

    cheyenne - not run

  python testing (see instructions in python/README.md; document testing done):

    (any machine) - pass (on my mac)

  regular tests (aux_clm):

    cheyenne ---- ok
    izumi ------- ok

    ok: tests pass, many baselines fail as expected

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: YES, for all CN/BGC configurations

  Summarize any changes to answers, i.e.,
    - what code configurations: All CN/BGC configurations
    - what platforms/compilers: all
    - nature of change (roundoff; larger than roundoff/same climate; new climate): 
      larger than roundoff; expected to be same climate, but not
      investigated yet


  To verify that the answer changes only came from expected changes, I
  did a few rounds of testing. The following numbers refer to the groups
  of changes listed under "Purpose of changes", above. The changes in
  groups (4) and (5) were combined with those in groups (1) and (3) -
  i.e., the basically non-answer-changing sets.

  First, I tested with just the changes in (1). This led to differences
  in only limited configurations, as noted in
  https://github.com/ESCOMP/CTSM/pull/1155#issuecomment-695035048:
  - nofire tests had diffs in BTRAN2
  - dynroots tests had extensive diffs because now btran2 is calculated
    after the dyn roots updates in each time step
  - tests where the compared clm2 h0 file includes the 0th time step had
    diffs just in BTRAN2, for reasons I couldn't determine

  Then I tested with the changes in (2), which were expected to change
  answers for all CN/BGC tests. In particular, these change answers due
  to:
  - using updated h2osoi_vol rather than the one earlier in the time
    step when calculating btran2
  - only considering points in the exposed veg filter when averaging
    btran2 from patch to column, rather than using stale values from
    no-longer-exposed patches (which also means having fire_m = 0 if
    there are no currently-exposed veg patches in a column) (fix for
    ESCOMP/CTSM#1153)
  - treating btran2 values that are slightly greater than 1 as 1, rather
    than ignoring them completely (fix for ESCOMP/CTSM#1170)

  Finally, I tested with all of the changes, comparing against the
  baselines generated from (2). As expected, the only answer changes in
  this final round were in the BTRAN2 diagnostic field (due to setting
  btran2 to 0 over non-exposed-veg points).

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): none

Pull Requests that document the changes (include PR ids):
https://github.com/ESCOMP/CTSM/pull/1155

===============================================================
===============================================================
Tag name:  ctsm5.1.dev006
Originator(s):  sacks (Bill Sacks)
Date:  Sat Oct  3 19:50:41 MDT 2020
One-line Summary: Call correct routine to calculate btran2 for CNFireLi2021

Purpose of changes
------------------

Due to a subtle code bug, CNFireLi2021 was using the btran2 calculating
routine from the base class rather than the new one that is specific to
this formulation.

Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #):
- Resolves ESCOMP/CTSM#1173 (CNFireLi2021Mod uses the wrong btran2
  routine)


Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[X] clm5_1

[ ] clm5_0

[ ] ctsm5_0-nwp

[ ] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): none

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): none

Changes made to namelist defaults (e.g., changed parameter values): none

Changes to the datasets (e.g., parameter, surface or initial files): none

Substantial timing or memory changes: not investigated (none expected)

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance): none

Changes to tests or testing: none

CTSM testing:

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - not run

  tools-tests (test/tools):

    cheyenne - not run

  PTCLM testing (tools/shared/PTCLM/test):

    cheyenne - not run

  python testing (see instructions in python/README.md; document testing done):

    (any machine) - not run

  regular tests (aux_clm):

    cheyenne ---- ok
    izumi ------- ok

    ok: tests pass, Clm51Bgc baselines fail as expected

    Note: there were also the following BFAIL results due to missing
    baselines, as documented in the previous tag:

    FAIL ERS_D_Ld10.C96_C96_mg17.IHistClm50Sp.cheyenne_intel.clm-decStart BASELINE ctsm5.1.dev005: ERROR BFAIL some baseline files were missing
    FAIL ERS_Ln9.ne0ARCTICne30x4_ne0ARCTICne30x4_mt12.IHistClm50SpGs.cheyenne_intel.clm-clm50cam6LndTuningMode_1979Start BASELINE ctsm5.1.dev005: ERROR BFAIL some baseline files were missing
    FAIL SMS_Ln9.ne0ARCTICGRISne30x8_ne0ARCTICGRISne30x8_mt12.IHistClm50Sp.cheyenne_intel.clm-clm50cam6LndTuningMode_1979Start BASELINE ctsm5.1.dev005: ERROR BFAIL some baseline files were missing
    FAIL SMS_Ln9.ne0ARCTICGRISne30x8_ne0ARCTICGRISne30x8_mt12.ISSP585Clm50BgcCrop.cheyenne_intel.clm-clm50cam6LndTuningMode BASELINE ctsm5.1.dev005: ERROR BFAIL some baseline files were missing
    FAIL SMS_Ln9.ne0CONUSne30x8_ne0CONUSne30x8_mt12.IHistClm50Sp.cheyenne_intel.clm-clm50cam6LndTuningMode_2013Start BASELINE ctsm5.1.dev005: ERROR BFAIL some baseline files were missing

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: YES

  Summarize any changes to answers, i.e.,
    - what code configurations: Clm51Bgc
    - what platforms/compilers: all
    - nature of change (roundoff; larger than roundoff/same climate; new climate): 
      larger than roundoff; whether it is climate changing was not investigated

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): none

Pull Requests that document the changes (include PR ids):
https://github.com/ESCOMP/CTSM/pull/1174

===============================================================
===============================================================
Tag name:  ctsm5.1.dev005
Originator(s):  sacks (Bill Sacks)
Date:  Fri Oct  2 09:51:08 MDT 2020
One-line Summary: Answer changing bug fixes for clm51: fire and organic_frac_squared

Purpose of changes
------------------

A few bug fixes for CLM51:
- Initialize btran2 to 0 in CNFireLi2021Mod
- Remove multiplications by col%wtgcell in CNFireLi2021Mod
- Initialize nfire to 0 in CNFireLi2021Mod
- Fix organic_frac_squared default for clm5_1

Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #):
- Resolves ESCOMP/CTSM#1171 (btran2 not initialized to zero in
  CNFireLi2021Mod.F90)
- Partially addresses ESCOMP/CTSM#1169 (CNFireLi2021Mod reintroduces a
  number of bugs that were fixed in earlier versions)
- Partially addresses ESCOMP/CTSM#1166 (Possible problems with namelist
  defaults starting in ctsm5.0.dev001)


Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[X] clm5_1

[ ] clm5_0

[ ] ctsm5_0-nwp

[ ] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): none

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): none

Changes made to namelist defaults (e.g., changed parameter values):
- Fixes default for organic_frac_squared for clm5_1

Changes to the datasets (e.g., parameter, surface or initial files): none

Substantial timing or memory changes: not investigated (none expected)

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance): none

Changes to tests or testing: none

CTSM testing:

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - not run

  tools-tests (test/tools):

    cheyenne - not run

  PTCLM testing (tools/shared/PTCLM/test):

    cheyenne - not run

  python testing (see instructions in python/README.md; document testing done):

    (any machine) - not run

  regular tests (aux_clm):

    cheyenne ---- ok
    izumi ------- ok

    ok: tests pass, baselines fail just for CLM51 cases, as expected

    NOTE: The following expensive tests did not run, due to a long queue
    wait time; we are about to remove these tests from the test suite
    anyway:

    PEND ERS_D_Ld10.C96_C96_mg17.IHistClm50Sp.cheyenne_intel.clm-decStart RUN
    PEND ERS_Ln9.ne0ARCTICne30x4_ne0ARCTICne30x4_mt12.IHistClm50SpGs.cheyenne_intel.clm-clm50cam6LndTuningMode_1979Start RUN
    PEND SMS_Ln9.ne0ARCTICGRISne30x8_ne0ARCTICGRISne30x8_mt12.IHistClm50Sp.cheyenne_intel.clm-clm50cam6LndTuningMode_1979Start RUN
    PEND SMS_Ln9.ne0ARCTICGRISne30x8_ne0ARCTICGRISne30x8_mt12.ISSP585Clm50BgcCrop.cheyenne_intel.clm-clm50cam6LndTuningMode RUN
    PEND SMS_Ln9.ne0CONUSne30x8_ne0CONUSne30x8_mt12.IHistClm50Sp.cheyenne_intel.clm-clm50cam6LndTuningMode_2013Start RUN

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: YES - just for CLM51

  Summarize any changes to answers, i.e.,
    - what code configurations: CLM51
    - what platforms/compilers: all
    - nature of change (roundoff; larger than roundoff/same climate; new climate): 
      possibly new climate

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): none

Pull Requests that document the changes (include PR ids):
https://github.com/ESCOMP/CTSM/pull/1172

===============================================================
===============================================================
Tag name:  ctsm5.1.dev004
Originator(s): oleson (Keith Oleson), sacks (Bill Sacks)
Date:  Wed Sep 30 10:45:25 MDT 2020
One-line Summary: Improve robustness of onset and offset counters when changing dt

Purpose of changes
------------------

The logic in CNPhenology for onset_counter and offset_counter was not
robust when the model time step differed from the time step used to
generate the finidat file. This showed up when running with a 20-minute
time step using a finidat file that was generated with a 30-minute time
step. See https://github.com/ESCOMP/CTSM/issues/1163 for details.

The fix here improves the situation significantly, but I believe still
leaves some issues remaining; see
https://github.com/ESCOMP/CTSM/issues/1167 for details.


Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #):
- Resolves ESCOMP/CTSM#1163 (onset_counter variable on (all?) restart
  files is not compatible with subsequent model runs using a 20 minute
  time step)

Known bugs introduced in this tag (include github issue ID):
- ESCOMP/CTSM#1167 (Rework CNPhenology onset and offset triggers to be
  more robust to changes in dt)
  - This issue was not exactly introduced in this tag, but it captures
    some things that I think still need to be done for complete robustness

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[ ] clm5_0

[ ] ctsm5_0-nwp

[ ] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): none

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): none

Changes made to namelist defaults (e.g., changed parameter values): none

Changes to the datasets (e.g., parameter, surface or initial files): none

Substantial timing or memory changes: not checked (none expected)

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance): none

Changes to tests or testing: none

CTSM testing:

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - not run

  tools-tests (test/tools):

    cheyenne - not run

  PTCLM testing (tools/shared/PTCLM/test):

    cheyenne - not run

  python testing (see instructions in python/README.md; document testing done):

    (any machine) - not run

  regular tests (aux_clm):

    cheyenne ---- ok
    izumi ------- pass

    ok: tests pass, one test had answer changes as noted below

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: YES, but in very limited circumstances

  Summarize any changes to answers, i.e.,
    - what code configurations: Only when the model run uses a different
      time step than the initial conditions file
    - what platforms/compilers: all
    - nature of change (roundoff; larger than roundoff/same climate; new climate): 
      larger than roundoff; magnitude not investigated; in some cases,
      the differences might be significant if the model actually
      continues without aborting

    In the aux_clm test suite, this only appears in one test:
      SMS_Ln9.ne30pg2_ne30pg2_mg17.I2000Clm50BgcCrop.cheyenne_intel.clm-clm50cam6LndTuningMode

    but it might appear more widely in cam / fully coupled testing

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): none

Pull Requests that document the changes (include PR ids):
https://github.com/ESCOMP/CTSM/pull/1165

===============================================================
===============================================================
Tag name:  ctsm5.1.dev003
Originator(s): ivanderkelen (Inne Vanderkelen) / sacks (Bill Sacks)
Date:  Tue Sep 29 10:16:00 MDT 2020
One-line Summary: Add capability for dynamic lakes

Purpose of changes
------------------

Adds the capability for dynamic lake areas, read from the
landuse_timeseries file. This represents reservoir construction. For
now, this capability is off by default. Turning it on requires new
fields on the landuse_timeseries file which cannot yet be produced by
mksurfdata_map; these new fields will be added in
https://github.com/ESCOMP/CTSM/pull/1073.

A substantial part of this tag involved changing the accounting of water
and energy in lakes in order to conserve water and energy across
landunit transitions while not producing too large adjustment
fluxes. This change results in roundoff-level answer changes for all
transient cases.

The core changes in this tag are from Inne Vanderkelen, in consultation
with Bill Sacks. Additional changes are from Bill Sacks, in consultation
with Inne Vanderkelen.

Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #):
- Resolves ESCOMP/CTSM#200 (Count energy of water in lakes in total
  gridcell heat content)
- Resolves ESCOMP/CTSM#1140 (Add lake water to dynbal baselines)

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[ ] clm5_0

[ ] ctsm5_0-nwp

[ ] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions):
- Using the dynamic lakes functionality will require either the
  mksurfdata_map changes in https://github.com/ESCOMP/CTSM/pull/1073 or
  manually adding the necessary fields to the landuse_timeseries file.

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables):
- New namelist variable for transient runs: do_transient_lakes

Changes made to namelist defaults (e.g., changed parameter values): none

Changes to the datasets (e.g., parameter, surface or initial files): none

Substantial timing or memory changes: none

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance):
- Using the dynamic lakes functionality will require either the
  mksurfdata_map changes in https://github.com/ESCOMP/CTSM/pull/1073 or
  manually adding the necessary fields to the landuse_timeseries file.
- For this reason, the new test
  (ERS_Lm25.1x1_smallvilleIA.IHistClm50BgcCropQianRsGs.cheyenne_gnu.clm-smallville_dynlakes_monthly)
  requires a manual step to create the necessary landuse_timeseries
  file. This step is documented in the README file for the
  clm-smallville_dynlakes_monthly testmod.

Changes to tests or testing:
- Added a single-point test covering dynamic lakes, using a
  manually-created landuse_timeseries file:
  ERS_Lm25.1x1_smallvilleIA.IHistClm50BgcCropQianRsGs.cheyenne_gnu.clm-smallville_dynlakes_monthly

CTSM testing:

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - ok

    Tests pass, differences from baseline as expected due to new
    namelist variable

  tools-tests (test/tools):

    cheyenne - not run

  PTCLM testing (tools/shared/PTCLM/test):

    cheyenne - not run

  python testing (see instructions in python/README.md; document testing done):

    (any machine) - not run

  regular tests (aux_clm):

    cheyenne ---- ok
    izumi ------- ok

    Tests pass, baselines differ as expected

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: YES

  If a tag changes answers relative to baseline comparison the
  following should be filled in (otherwise remove this section):
  And always remove these three lines and parts that don't apply.

  Summarize any changes to answers, i.e.,
    - what code configurations: Transient cases
    - what platforms/compilers: all
    - nature of change (roundoff; larger than roundoff/same climate; new climate): 
      Mostly roundoff-level. See below for details.

      - Differences in HEAT_CONTENT1, ICE_CONTENT1, LIQUID_CONTENT1, as
        expected

      - In transient tests (including Hist/SSP, Fates, CNDV and
        transient glacier), roundoff-level diffs in EFLX_DYNBAL,
        QFLX_ICE_DYNBAL and QFLX_LIQ_DYNBAL, along with related flux
        terms, and river volume

      - In some transient tests, roundoff-level diffs in methane terms,
        presumably from downstream effects of changes in VOLR due to
        roundoff-level changes in fluxes. In multi-year tests, these
        methane diffs grow to bigger than roundoff-level, but I think
        they originate from roundoff-level diffs. (I feel like I've seen
        this high sensitivity before.)

      - glcMEC_increase test
        (ERP_P180x2_D_Ld5.f19_g17_gl4.I1850Clm50BgcCropG.cheyenne_intel.clm-glcMEC_increase)
        shows significant differences in river-related terms, maybe due
        to glacier running over lake and now lake has different states
        than before; also, FILLDIFFs in h1 file because lake remains
        active even when it goes to 0 area.

   If bitwise differences were observed, how did you show they were no worse
   than roundoff?
   - Examined cprnc RMS diffs

   If this tag changes climate describe the run(s) done to evaluate the new
   climate (put details of the simulations in the experiment database)
       - casename: N/A

   URL for LMWG diagnostics output used to validate new climate: N/A
	

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): none

Pull Requests that document the changes (include PR ids):
https://github.com/ESCOMP/CTSM/pull/1109
https://github.com/billsacks/ctsm/pull/3

===============================================================
===============================================================
Tag name:  ctsm5.1.dev002
Originator(s):  slevis (Samuel Levis,303-665-1310)
Date:  Mon Sep 25 09:39:19 MDT 2020
One-line Summary: Reduce duplication between caps

Purpose of changes
------------------

 Eliminate duplication of the "derived quantities for required fields"
 and corresponding error checking codes that repeat across the mct,
 nuopc, and lilac caps. This consolidates the code and reduces
 maintenance requirements.


Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #): #918


Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[X] clm5_0

[X] ctsm5_0-nwp

[X] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): None

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): None

Changes made to namelist defaults (e.g., changed parameter values): None

Changes to the datasets (e.g., parameter, surface or initial files): None

Substantial timing or memory changes: [For timing changes, can check PFS test(s) in the test suite] None

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance): None

Changes to tests or testing: None

Code reviewed by: @billsacks @slevisconsulting


CTSM testing:

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - 

  tools-tests (test/tools):

    cheyenne - 

  PTCLM testing (tools/shared/PTCLM/test):

    cheyenne - 

  python testing (see instructions in python/README.md; document testing done):

    (any machine) - 

  regular tests (aux_clm):

    cheyenne ---- OK
    izumi ------- PASS

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: Yes (Similar climate)

  Summarize any changes to answers, i.e.,
    - what code configurations: All
    - what platforms/compilers: All
    - nature of change: Larger than roundoff/same climate


Detailed list of changes
------------------------

 Changes were implemented in three steps:

 1) Bit-for-bit: @billsacks simplified subroutine QSat by making three
 arguments optional (es, qsdT, esdT).

 2) Answer-changing: @slevisconsulting replaced local calculations of
 qsat in /src/cpl/mct, /src/cpl/lilac, and /src/cpl/nuopc with calls to
 CTSM's subroutine QSat. Subroutine QSat uses a higher-order polynomial
 approximation to estimate qsat, which explains the larger than
 round-off diffs. When moving the three identical local approximations
 to QSat as a temporary test instead of using the higher-order
 polynomial approximation, the diffs reduce to round-off.

 3) Bit-for-bit: @slevisconsulting consolidated repeating codes in
 /src/cpl/mct, /src/cpl/lilac, and /src/cpl/nuopc by placing in the new
 file /src/utils/lnd_import_export_utils.F90.

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.):

Pull Requests that document the changes (include PR ids):
 https://github.com/ESCOMP/CTSM/pull/1086
 https://github.com/ESCOMP/CTSM/pull/1094
===============================================================
===============================================================
Tag name:  ctsm5.1.dev001
Originator(s):  erik (Erik Kluzek,UCAR/TSS,303-497-1326)
Date: Wed Sep 23 02:29:08 MDT 2020
One-line Summary: Start the clm5_1 physics series, with some changes to the fire model from Fang Li

Purpose of changes
------------------

Fang Li's latest Fire version - includes allowing clm5.1 phys version. New physics option is added
called "clm5_1", with currently the new feature to use the latest fire changes. This has some
adjustments to the fire model and includes some changes to the parameter file. Other new features
will be added into clm5_1 in future tags.

Also bring in mksurfdata changes for the raw urban dataset change. This adds some changes to
mksurfdata for a new urban raw dataset, as well as preparation for new changes for some other
urban changes that will be a future part of clm5_1. Also use the half degree lightning dataset
by default for clm5_1.

Start adding a new test list ctsm_sci that tests all the scientifically supported compsets.
Some of those tests fail due to existing issues, that will be fixed later.

Some more work done to change clm to ctsm, and allow for ctsm as a component.

Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #): 
  Fix #1142 -- Add ctsm_sci test list
  Fix #1145 -- File was corrupted on glade
  Fix #1144 -- Move btran2 to just inside of fire model
  Fix #889 --- Some adjustments to the Li Fire model

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[ ] clm5_0

[ ] ctsm5_0-nwp

[ ] clm4_5

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): None

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): Adds clm5_1 option to CLM_PHYSICS_VERSION
  clm5_1_GSWP3v1 is the only LND_TUNING_MDOE option for clm5_1
  New compsets added for CLM51 I2000Clm51BgcCropGs, I2000Clm51BgcGs, I1850Clm51BgcGs, IHistClm51BgcGs, IHistClm51BgcCropGs
     

Changes made to namelist defaults (e.g., changed parameter values): clm5_1 physics options added in
    Add the ability to set the component name in filenames (default is still clm2, but can be clm4, olr clm5)
     By default lightning dataset for clm5_1 is the half degree file

Changes to the datasets (e.g., parameter, surface or initial files): All params files updated with new fields for fire

Substantial timing or memory changes: None

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in README.CHECKLIST.master_tags as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance):

Changes to tests or testing: Add ctsm_sci test list and move some clm5_0 to clm5_1 and one one clm5_1 specific test

Code reviewed by: self


CTSM testing: regular, tools

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - PASS (853 tests are different)

  tools-tests (test/tools):

    cheyenne - PASS

  python testing (see instructions in python/README.md; document testing done):

    cheyenne -- PASS

  regular tests (aux_clm):

    cheyenne ---- OK
    izumi ------- PASS

If the tag used for baseline comparisons was NOT the previous tag, note that here:


Answer changes
--------------

Changes answers relative to baseline: No (although clm5_1 is a new physics option that is different)

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): None

Pull Requests that document the changes (include PR ids):
(https://github.com/ESCOMP/ctsm/pull)
  #1151 -- Move btran2 to inside CNFireBase
  #1150 -- ctsm5.1 starting point
  #1157 -- Urban mksurfdata_map changes
  #1149 -- LILACSMOKE test change
  #1146 -- Add --project to LILACS create_newcase

===============================================================
===============================================================
