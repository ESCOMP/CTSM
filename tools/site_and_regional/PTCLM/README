PTCLM/README                04/10/2015

NOTE PTCLM is DEPRECATED!

NOTE, PTCLM is being deprecated to make way for new faster tools that will create datasets
based on existing global datasets rather than use the same process for global datasets. Those
scripts are under tools/site_and_regional in a CTSM checkout. There is a high memory requirement
for the process with PTCLM because of the need to make mapping files from global grids. The simpler
process of extracting just the data needed from existing global files is much faster and easier
to do on even simple systems such as a laptop.

PTCLMmkdata is a python tool built on top of CLM tools and CESM scripts
for building datasets to run CLM "I" cases for data from Ameriflux Tower-sites,
or other user-supplied single-point datasets.

Original Authors:

Daniel M. Ricciuto, Dali Wang, Peter E. Thornton, Wilfred M. Post

Environmental Sciences Division, Oak Ridge National Laboratory (ORNL)

R. Quinn Thomas

Cornell University

Modified by:

Erik Kluzek (NCAR)

General Directory structure:

  PTCLM/PTCLMmkdata ----- Main script
  PTCLM/PTCLM_sitedata  - Site data files of 
        static information latitude, longitude, soil info., and PFT information 
        for each site Also different "groups" of site-data lists, and the script to
        convert the transient years landuse_timeseries files into landuse_timeseries text files that
        mksurfdata can use.
  PTCLM/mydatafiles ----- Default location of
        data files that will be created by PTCLMmkdata. Sites will be built
        in their own subdirectories under here. Optionally you can give your
        own location you'd like to use for your data.

  PTCLM/PTCLMsublist --------- Script to submit a list of PTCLM
        sites to the batch que (only setup for a few machines).
  PTCLM/PTCLMsublist_prog.py - Python module to support submit
        list script. Handles command line arguments and such.
  PTCLM/batchque.py ---------- Python module for batch submital.
  PTCLM/buildtools ----------- Script to build the CLM
        tools needed to run PTCLMmkdata (mksurfdata_map and gen_domain). Works on cheyenne.

Quickstart:

# ASSUMPTIONS:
# For this example I'm running a I1PtClm50SpGs case on cheyenne using  
# CSMDATA in the standard location
# Finally we use the 6-digit AmeriFlux site code for the University of Mich. Biological
# Station US-UMB (data for this station is checked into the inputdata repository).
# I also assume you are using UNIX C-shell, and GNU make is called gmake
setenv CSMDATA   /glade/p/cesm/cseg/inputdata
setenv SITE      US-UMB


cd PTCLM
setenv MYDATAFILES `pwd`/mydatafiles

# Next build all of the clm tools you will need
# The following script assumes cheyenne, hobart, or izumi for other machines
# you'll need to build each tool by hand
./buildtools
# next run PTCLMsublist which will submit PTCLMmkdata to batch queue (NOTE -- MAKE SURE python, NCO AND NCL IS IN YOUR PATH)
#       PTCLMsublist is only setup for a few batch machines, you'll need to update them to add new machines
#       or create your own batch submission script.
# NOTE: Every day you run PTCLMmkdata it will remake the map called
#       renamemapfiles to rename files with todays creation date.
#       This makes running PTCLMmkdata a reasonable amount of time.
#       However, you can use the script in mydatafiles
#
qcmd -l walltime=02:00:00 -- ./PTCLMsublist -l $SITE -d $CSMDATA --account=XXXXXXXXX --mach=cheyenne

# NOTE: To submit several sites at once, make the "-l" option a comma delimited
#       list of site names.

# Next copy the towersite meterology datafiles into your $MYDATAFILES space
# (For the US-UMB station you can skip this step as the .build step will bring the data over) 
cd $MYDATAFILES/1x1pt_$SITE
mkdir $MYDATAFILES/1x1pt_$SITE/CLM1PT_data
# Copy meteorology data NetCDF files into 1x1pt_$SITE sub-directory 
# (with filenames of yyyy-mm.nc)
# The variables assumed to be on the files are: 
#     ZBOT, TBOT, RH, WIND, PRECTmms, FSDS, PSRF, FLDS
# (if other fields are available or with different names this can be changed by
#  adding a user_nl_datm.streams.txt file as we outline below)
# Make sure your data has time with the attribute: calendar="gregorian"

# Make sure the forcing directory points to the location of your data
# (PTCLMmkdata should already do this)
./xmlchange DIN_LOC_ROOT_CLMFORC=$MYDATAFILES/1x1pt_$SITE

# Then create a case using the data you just created
setenv MYCASE "testPTCLM"
cd $CTSMROOT/cime
setenv CIMEROOT `pwd`
cd $CIMEROOT/scripts
./create_newcase --user-mods-dir $MYDATAFILES/1x1pt_$SITE --case $MYCASE --res CLM_USRDAT --compset I1PtClm50SpGs --mach cheyenne

# Next setup as normal
cd $MYCASE
./case.setup

# If you need to customize your list of fields uncomment and do the following...
# cp CaseDocs/datm.streams.txt.CLM1PT.CLM_USRDAT user_datm.streams.txt.CLM1PT.CLM_USRDAT
# chmod u+w user_datm.streams.txt.CLM1PT.CLM_USRDAT
# $EDITOR user_datm.streams.txt.CLM1PT.CLM_USRDAT
# ./preview_namelists

# Finally build, and run the case as normal
./case.build
./case.submit
